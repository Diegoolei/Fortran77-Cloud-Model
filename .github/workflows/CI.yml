name: Continuous Integration
on:
  push:
    branches: [ "main" ]
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-gcc${{ matrix.gcc-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        gcc-version: ['10', '11', '12']

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      # Install gfortran on each OS
      - name: Setup Fortran Compiler
        uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
            compiler: gcc
            version: ${{ matrix.gcc-version }}

      # Install fpm for Windows
      - name: Install fpm
        uses: fortran-lang/setup-fpm@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.2

      - name: Build wheels
        run: python -m cibuildwheel python/ --output-dir python/wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-gcc${{ matrix.gcc-version }}
          path: ./python/wheelhouse/


  deploy:
    needs: [build_wheels]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.12']
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
          path: ./python/wheelhouse/
          pattern: cibw-wheels-${{ matrix.os }}-gcc*
          merge-multiple: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USER }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASS }}
      working-directory: python
      run: |
        python -m pip install --upgrade pip
        pip install twine
        twine upload --repository testpypi wheelhouse/*